"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var _1 = require("./");
var uuid_1 = require("uuid");
var DomainEvent = /** @class */ (function () {
    function DomainEvent(eventData, encryptedData) {
        this.eventId = uuid_1.v4();
        this.eventType = eventData.constructor.name;
        this.data = eventData;
        this.encryptedData = encryptedData;
    }
    DomainEvent.create = function (eventData, encryptedData) {
        return new DomainEvent(eventData, encryptedData);
    };
    return DomainEvent;
}());
exports.DomainEvent = DomainEvent;
var SerializedInstance = /** @class */ (function () {
    function SerializedInstance(config) {
        this.config = config;
        if (!config) {
            throw "No configuration given to client";
        }
        this.validateConfiguration();
    }
    SerializedInstance.prototype.validateConfiguration = function () {
        if (!this.config.accessKey) {
            throw "accessKey is missing in client configuration";
        }
        if (!this.config.secretAccessKey) {
            throw "accessKey is missing in client configuration";
        }
    };
    SerializedInstance.prototype.aggregateClient = function (type) {
        return new _1.AggregatesClient(type, this.config);
    };
    SerializedInstance.prototype.projectionsClient = function () {
        return new _1.ProjectionsClient(this.config);
    };
    SerializedInstance.prototype.feedsClient = function () {
        return new _1.FeedsClient(this.config);
    };
    SerializedInstance.prototype.reactionsClient = function () {
        return new _1.ReactionsClient(this.config);
    };
    SerializedInstance.prototype.tenantClient = function () {
        return new _1.TenantClient(this.config);
    };
    return SerializedInstance;
}());
exports.SerializedInstance = SerializedInstance;
