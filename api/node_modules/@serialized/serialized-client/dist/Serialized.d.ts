import { AggregatesClient, FeedsClient, ProjectionsClient, ReactionsClient, SerializedConfig, TenantClient } from "./";
export declare class DomainEvent<E> {
    readonly eventId: string;
    readonly eventType: string;
    readonly data: E;
    readonly encryptedData?: string;
    constructor(eventData: E, encryptedData?: string);
    static create<E>(eventData: E, encryptedData?: string): DomainEvent<E>;
}
export declare class SerializedInstance {
    readonly config: SerializedConfig;
    constructor(config: SerializedConfig);
    validateConfiguration(): void;
    aggregateClient<A>(type: any): AggregatesClient<A>;
    projectionsClient(): ProjectionsClient;
    feedsClient(): FeedsClient;
    reactionsClient(): ReactionsClient;
    tenantClient(): TenantClient;
}
