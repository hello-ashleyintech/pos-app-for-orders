"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var error_1 = require("./error");
var StateLoader = /** @class */ (function () {
    function StateLoader(stateType) {
        this.stateType = stateType;
        var constructor = stateType.prototype.constructor;
        var instance = new constructor({});
        if (!instance.eventHandlers || instance.eventHandlers.length === 0) {
            throw new error_1.ConfigurationError("No event handlers configured for aggregate: " + constructor.name);
        }
        this.initialState = instance.initialState ? instance.initialState : {};
        this.eventHandlers = instance.eventHandlers;
        this.defaultHandler = instance.defaultHandler;
    }
    StateLoader.prototype.loadState = function (events) {
        var _this = this;
        var currentState = this.initialState;
        events.forEach(function (e) {
            var eventType = e.eventType;
            var handler = _this.eventHandlers[e.eventType];
            if (handler) {
                currentState = handler.call({}, currentState, e);
            }
            else if (_this.defaultHandler) {
                _this.defaultHandler.call({}, currentState, e);
            }
            else {
                throw new error_1.StateLoadingError("Failed to call handler. No match for event " + eventType);
            }
        });
        return currentState;
    };
    return StateLoader;
}());
exports.StateLoader = StateLoader;
